service: iopipe-py-acceptance-test-serverless

provider:
  name: aws
  runtime: python3.6
  stage: master
  region: us-west-2
  role: ${env:IAM_ROLE}
  environment:
    IOPIPE_TOKEN: ${env:IOPIPE_TOKEN}
    PY2_API_GATEWAY_URL: ${env:PY2_API_GATEWAY_URL}
    PY3_API_GATEWAY_URL: ${env:PY3_API_GATEWAY_URL}

functions:
  py2-api-gateway:
    events:
      - http:
          path: /
          method: get
    handler: handler.api_gateway
    runtime: python2.7
  py3-api-gateway:
    events:
      - http:
          path: /
          method: get
    handler: handler.api_gateway
    runtime: python3.6

  py2-api-trigger:
    events:
      - schedule: rate(10 minutes)
    handler: handler.api_trigger
    runtime: python2.7
  py3-api-trigger:
    events:
      - schedule: rate(10 minutes)
    handler: handler.api_trigger
    runtime: python3.6

  py2-baseline:
    events:
      - schedule: rate(10 minutes)
    handler: handler.baseline
    runtime: python2.7
  py3-baseline:
    events:
      - schedule: rate(10 minutes)
    handler: handler.baseline
    runtime: python3.6

  py2-base-coldstart:
    events:
      - schedule: rate(10 minutes)
    handler: handler.baseline_coldstart
    runtime: python2.7
  py3-base-coldstart:
    events:
      - schedule: rate(10 minutes)
    handler: handler.baseline_coldstart
    runtime: python3.6

  py2-caught-error:
    events:
      - schedule: rate(10 minutes)
    handler: handler.caught_error
    runtime: python2.7
  py3-caught-error:
    events:
      - schedule: rate(10 minutes)
    handler: handler.caught_error
    runtime: python3.6

  py2-coldstart:
    events:
      - schedule: rate(10 minutes)
    handler: handler.coldstart
    runtime: python2.7
  py3-coldstart:
    events:
      - schedule: rate(10 minutes)
    handler: handler.coldstart
    runtime: python3.6

  py2-custom-metrics:
    events:
      - schedule: rate(10 minutes)
    handler: handler.custom_metrics
    runtime: python2.7
  py3-custom-metrics:
    events:
      - schedule: rate(10 minutes)
    handler: handler.custom_metrics
    runtime: python3.6

  py2-profiling:
    events:
      - schedule: rate(10 minutes)
    handler: handler.profiling
    runtime: python2.7
  py3-profiling:
    events:
      - schedule: rate(10 minutes)
    handler: handler.profiling
    runtime: python3.6

  py2-success:
    events:
      - schedule: rate(10 minutes)
    handler: handler.success
    runtime: python2.7
  py3-success:
    events:
      - schedule: rate(10 minutes)
    handler: handler.success
    runtime: python3.6

  py2-timeout:
    events:
      - schedule: rate(10 minutes)
    handler: handler.timeout
    runtime: python2.7
    timeout: 1
  py3-timeout:
    events:
      - schedule: rate(10 minutes)
    handler: handler.timeout
    runtime: python3.6
    timeout: 1

  py2-tracing:
    events:
      - schedule: rate(10 minutes)
    handler: handler.tracing
    runtime: python2.7
  py3-tracing:
    events:
      - schedule: rate(10 minutes)
    handler: handler.tracing
    runtime: python3.6

  py2-uncaught-error:
    events:
      - schedule: rate(10 minutes)
    handler: handler.uncaught_error
    runtime: python2.7
  py3-uncaught-error:
    events:
      - schedule: rate(10 minutes)
    handler: handler.uncaught_error
    runtime: python3.6
